import pathlib

import cirq
from cirq.protocols.json_serialization import RESOLVER_CACHE
from cirq.testing.json_serialization_test_spec import JsonSerializationTestSpec

TestSpec = JsonSerializationTestSpec(
    name="cirq",
    modules=[cirq, cirq.work],
    test_file_path=pathlib.Path(__file__).parent,
    resolver_cache=RESOLVER_CACHE.cirq_class_resolver_dictionary,
    not_yet_serializable=[
        'AsymmetricDepolarizingChannel',
        'AxisAngleDecomposition',
        'CircuitDag',
        'CircuitDiagramInfo',
        'CircuitDiagramInfoArgs',
        'CircuitSampleJob',
        'CliffordSimulatorStepResult',
        'CliffordState',
        'CliffordTrialResult',
        'ConstantQubitNoiseModel',
        'DensityMatrixSimulator',
        'DensityMatrixSimulatorState',
        'DensityMatrixStepResult',
        'DensityMatrixTrialResult',
        'ExpressionMap',
        'Heatmap',
        'InsertStrategy',
        'IonDevice',
        'KakDecomposition',
        'LinearCombinationOfGates',
        'LinearCombinationOfOperations',
        'Linspace',
        'ListSweep',
        'NeutralAtomDevice',
        'ParallelGateOperation',
        'PauliInteractionGate',
        'PauliStringPhasor',
        'PauliSum',
        'PauliSumCollector',
        'PauliTransform',
        'PeriodicValue',
        'PointOptimizationSummary',
        'Points',
        'Product',
        'QasmArgs',
        'QasmOutput',
        'QubitOrder',
        'QubitPermutationGate',
        'QuilFormatter',
        'QuilOutput',
        'SimulationTrialResult',
        'SingleQubitCliffordGate',
        'SparseSimulatorStep',
        'StateVectorMixin',
        'TextDiagramDrawer',
        'ThreeQubitDiagonalGate',
        'Timestamp',
        'TwoQubitDiagonalGate',
        'UnitSweep',
        'StateVectorSimulatorState',
        'StateVectorTrialResult',
        'WaveFunctionSimulatorState',
        'WaveFunctionTrialResult',
        'ZerosSampler',
        'Zip',
    ],
    shouldnt_be_serialized=[
        # Intermediate states with work buffers and unknown external prng guts.
        'ActOnCliffordTableauArgs',
        'ActOnStabilizerCHFormArgs',
        'ActOnStateVectorArgs',
        'ApplyChannelArgs',
        'ApplyMixtureArgs',
        'ApplyUnitaryArgs',

        # Circuit optimizers are function-like. Only attributes
        # are ignore_failures, tolerance, and other feature flags
        'ConvertToCzAndSingleGates',
        'ConvertToIonGates',
        'ConvertToNeutralAtomGates',
        'DropEmptyMoments',
        'DropNegligible',
        'EjectPhasedPaulis',
        'EjectZ',
        'ExpandComposite',
        'MergeInteractions',
        'MergeSingleQubitGates',
        'PointOptimizer',
        'SynchronizeTerminalMeasurements',

        # global objects
        'CONTROL_TAG',
        'PAULI_BASIS',
        'PAULI_STATES',

        # abstract, but not inspect.isabstract():
        'Device',
        'InterchangeableQubitsGate',
        'Pauli',
        'SingleQubitGate',
        'ThreeQubitGate',
        'TwoQubitGate',
        'ABCMetaImplementAnyOneOf',

        # protocols:
        'SupportsActOn',
        'SupportsApplyChannel',
        'SupportsApplyMixture',
        'SupportsApproximateEquality',
        'SupportsChannel',
        'SupportsCircuitDiagramInfo',
        'SupportsCommutes',
        'SupportsConsistentApplyUnitary',
        'SupportsDecompose',
        'SupportsDecomposeWithQubits',
        'SupportsEqualUpToGlobalPhase',
        'SupportsExplicitHasUnitary',
        'SupportsExplicitNumQubits',
        'SupportsExplicitQidShape',
        'SupportsJSON',
        'SupportsMeasurementKey',
        'SupportsMixture',
        'SupportsParameterization',
        'SupportsPauliExpansion',
        'SupportsPhase',
        'SupportsQasm',
        'SupportsQasmWithArgs',
        'SupportsQasmWithArgsAndQubits',
        'SupportsTraceDistanceBound',
        'SupportsUnitary',

        # mypy types:
        'CIRCUIT_LIKE',
        'DURATION_LIKE',
        'JsonResolver',
        'NOISE_MODEL_LIKE',
        'OP_TREE',
        'PAULI_GATE_LIKE',
        'PAULI_STRING_LIKE',
        'ParamResolverOrSimilarType',
        'PauliSumLike',
        'QubitOrderOrList',
        'RANDOM_STATE_OR_SEED_LIKE',
        'STATE_VECTOR_LIKE',
        'Sweepable',
        'TParamKey',
        'TParamVal',
        'ParamDictType',

        # utility:
        'CliffordSimulator',
        'Simulator',
        'StabilizerSampler',
        'Unique',
        'DEFAULT_RESOLVERS',
    ])
