sudo: false
language: python
cache:
  directories:
  - ".benchmarks"
branches:
  only:
  - master
before_install:
- pip install --upgrade pip setuptools wheel
stages:
- test
- name: deploy
  if: type = push AND branch = master
matrix:
  include:
  - stage: test
    os: linux
    env: NAME=misc
    python: '3.6'
    install: skip
    script: check/misc
  - stage: test
    os: linux
    env: NAME=pytest-changed-files
    python: '3.6'
    install:
    - dev_tools/conf/pip-install-minimal-for-pytest-changed-files.sh
    script: check/pytest-changed-files
  - stage: test
    os: linux
    env: NAME=format
    python: '3.6'
    install:
      - cat dev_tools/conf/pip-list-dev-tools.txt | grep yapf | xargs pip install
    script: check/format-incremental
  - stage: test
    os: linux
    env: NAME=mypy
    python: '3.6'
    install:
      - cat dev_tools/conf/pip-list-dev-tools.txt | grep mypy | xargs pip install
    script: check/mypy
  - stage: test
    os: windows
    env: NAME=pytest (Windows)
    language: sh
    python: '3.7.3'
    before_install:
      - choco install python --version 3.7.3
      - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
      - python -m pip install --upgrade pip wheel
    install:
      - python -m pip install -r requirements.txt
      - python -m pip install -r cirq/contrib/contrib-requirements.txt
      - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/pytest --benchmark-skip --actually-quiet
  - stage: test
    os: linux
    env: NAME=pytest-and-incremental-coverage
    python: '3.6'
    install:
    - python -m pip install -r requirements.txt
    - python -m pip install -r cirq/contrib/contrib-requirements.txt
    - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/pytest-and-incremental-coverage master --actually-quiet
  - stage: test
    os: linux
    env: NAME=build-docs
    python: '3.7'
    install:
      - python -m pip install -r requirements.txt
      - python -m pip install -r cirq/contrib/contrib-requirements.txt
      - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
      - sudo apt-get install pandoc
    script: dev_tools/build-docs.sh
  - stage: test
    os: osx
    env: NAME=pytest (macOS)
    python: '3.6'
    language: generic
    install:
      - python3.6 -m venv venv
      - source venv/bin/activate
      - python -m pip install -r requirements.txt
      - python -m pip install -r cirq/contrib/contrib-requirements.txt
      - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/pytest --benchmark-skip
  - stage: test
    os: linux
    env: NAME=pytest (without contrib)
    python: '3.7'
    install:
    - python -m pip install -r requirements.txt
    - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/pytest --ignore=cirq/contrib --benchmark-skip --actually-quiet
  - stage: test
    os: linux
    env: NAME=doctest
    python: '3.6'
    install:
    - python -m pip install -r requirements.txt
    - python -m pip install -r cirq/contrib/contrib-requirements.txt
    script: check/doctest -q
  - stage: test
    os: linux
    env: NAME=pylint
    python: '3.6'
    install:
      - cat dev_tools/conf/pip-list-dev-tools.txt | grep "pylint\|astroid" | grep -v
        "#" | xargs pip install
    script: check/pylint
  - stage: test
    os: linux
    env: NAME=build-protos
    python: '3.6'
    install:
      - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
      - wget https://github.com/bazelbuild/bazel/releases/download/0.26.0/bazel_0.26.0-linux-x86_64.deb
      - sudo dpkg -i bazel_0.26.0-linux-x86_64.deb
    script: check/build-protos
  - stage: deploy
    os: linux
    env: NAME=dev-release
    python: '3.7'
    script: export CIRQ_UNSTABLE_VERSION=$(dev_tools/packaging/generate-dev-version-id.sh)
  - stage: test
    os: linux
    env: NAME=testall
    python: '3.6'
    install:
      - python -m pip install -r requirements.txt
      - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/all
