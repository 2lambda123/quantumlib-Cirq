sudo: false
language: python
cache:
  directories:
  - ".benchmarks"
branches:
  only:
  - master
before_install:
- pip install --upgrade pip setuptools wheel
stages:
- test
- name: deploy
  if: type = push AND branch = master
matrix:
  include:
  - stage: test
    os: linux
    env: NAME=mypy
    python: '3.6'
    install:
    - cat dev_tools/conf/pip-list-dev-tools.txt | grep mypy | xargs pip install
    script: check/mypy
  - stage: test
    os: linux
    env: NAME=pylint
    python: '3.6'
    install:
    - cat dev_tools/conf/pip-list-dev-tools.txt | grep "pylint\|astroid" | grep -v
      "#" | xargs pip install
    script: check/pylint
  - stage: test
    os: linux
    env: NAME=format
    python: '3.6'
    install:
    - cat dev_tools/conf/pip-list-dev-tools.txt | grep yapf | xargs pip install
    script: check/format-incremental
  - stage: test
    os: linux
    env: NAME=pytest-and-incremental-coverage
    python: '3.6'
    install:
    - pip install -r requirements.txt
    - pip install -r cirq/contrib/contrib-requirements.txt
    - pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/pytest-and-incremental-coverage master --actually-quiet
  - stage: test
    os: linux
    env: NAME=pytest (without contrib)
    python: '3.7'
    install:
    - pip install -r requirements.txt
    - pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/pytest --ignore=cirq/contrib --benchmark-skip --actually-quiet
  - stage: test
    os: windows
    env: NAME=pytest (Windows)
    language: sh
    python: 3.7.3
    before_install:
    - powershell -command 'Set-MpPreference -DisableArchiveScanning $true'
    - powershell -command 'Set-MpPreference -DisableBehaviorMonitoring $true'
    - powershell -command 'Set-MpPreference -DisableRealtimeMonitoring $true'
    - choco install python --version 3.7.3
    - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
    - python -m pip install --upgrade pip wheel
    install:
    - python -m pip install -r requirements.txt
    - python -m pip install -r cirq/contrib/contrib-requirements.txt
    - python -m pip install -r dev_tools/conf/pip-list-dev-tools.txt
    script: check/pytest --benchmark-skip --actually-quiet
  - stage: test
    os: linux
    env: NAME=doctest
    python: '3.6'
    install:
    - pip install -r requirements.txt
    - pip install -r cirq/contrib/contrib-requirements.txt
    script: check/doctest -q
  - stage: deploy
    os: linux
    env: NAME=dev-release
    python: '3.7'
    script: source dev_tools/packaging/set-dev-version.sh
before_deploy:
- echo "Deploying dev version '$CIRQ_DEV_VERSION'"
deploy:
  matrix:
  - provider: pypi
    user: quantumlib
    on:
      condition: '"$CIRQ_DEV_VERSION" == *dev*'
    distributions: bdist_wheel
    password:
      secure: eRZ9+hXH/aW/dLfZtJ8YXlaXNRU1PU9Hn4/0BsV3SK81gzk7wNiXqQcfI+l3X8/wnESXHRTgo2SC+Az6VyCPhHT/1MupjoEMoGqqiPdV4sKOTNuIkfTA6wfzUNjPqYKosFlnQywdkhASJOLbZsjeDMVWX0ITikWoYoWCQVWnlJSkbWdYvi1+SIIDCXWrMaL4Ets14n9LCg4u+WdPu6wj7HJI+aZjuZTotUweG/DDZXt9M6HMHUabSL2IC5ivVz0dhGY6raoytRfcYG+H7W9//WnVteDRERocZksRgYd469lA0LyqJ8pekwYbEfvaN/GfMqJlbG0at2MwYTg94B2Oxs9R3CnOinsBSO4UYrZC86IGpqMVly8j1jQXoXeojjfULH7uKnIrvEU7AVsze2nUhLbalk8v5WDnX10FMx1v3s8CKqXSpHX1WjuL2mkQ8waSZGDt5vkiyyWHQPs966qI/F1qeyVq6Y+wWUfEFP6JcQrT/kQJ5Fcr17alTFsAGKN9ccimiT/yb/49U7jO4XP0GWi1TtrJ2T+yNqDTY5MVfHUbvZgs5FAP+NToNzt62JzuTQtZRrO2cgJ0w6xeQVFV/OLVtBH63T96Xr1AEO73BebeVjzOn2Lld9i2+uPQZZ7lYLt2mXjGQ7Cdf94Ph/FSkPOvybtK35ACIGr5O+j38tQ=
