"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import cirq_google.api.v2.metrics_pb2
import cirq_google.api.v2.program_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CalibrationLayerCode(metaclass=_CalibrationLayerCode):
    V = typing.NewType('V', builtins.int)

global___CalibrationLayerCode = CalibrationLayerCode

CALIBRATION_RESULT_UNSPECIFIED = CalibrationLayerCode.V(0)
SUCCESS = CalibrationLayerCode.V(1)
ERROR_OTHER = CalibrationLayerCode.V(2)
ERROR_INVALID_PARAMETERS = CalibrationLayerCode.V(3)
ERROR_TIMEOUT = CalibrationLayerCode.V(4)
ERROR_CALIBRATION_FAILED = CalibrationLayerCode.V(5)

class _CalibrationLayerCode(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CalibrationLayerCode.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    CALIBRATION_RESULT_UNSPECIFIED = CalibrationLayerCode.V(0)
    SUCCESS = CalibrationLayerCode.V(1)
    ERROR_OTHER = CalibrationLayerCode.V(2)
    ERROR_INVALID_PARAMETERS = CalibrationLayerCode.V(3)
    ERROR_TIMEOUT = CalibrationLayerCode.V(4)
    ERROR_CALIBRATION_FAILED = CalibrationLayerCode.V(5)

class FocusedCalibration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYERS_FIELD_NUMBER: builtins.int

    @property
    def layers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CalibrationLayer]: ...

    def __init__(self,
        *,
        layers : typing.Optional[typing.Iterable[global___CalibrationLayer]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"layers",b"layers"]) -> None: ...
global___FocusedCalibration = FocusedCalibration

class CalibrationLayer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ArgsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...

        @property
        def value(self) -> cirq_google.api.v2.program_pb2.Arg: ...

        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[cirq_google.api.v2.program_pb2.Arg] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    CALIBRATION_TYPE_FIELD_NUMBER: builtins.int
    LAYER_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    calibration_type: typing.Text = ...

    @property
    def layer(self) -> cirq_google.api.v2.program_pb2.Program: ...

    @property
    def args(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, cirq_google.api.v2.program_pb2.Arg]: ...

    def __init__(self,
        *,
        calibration_type : typing.Text = ...,
        layer : typing.Optional[cirq_google.api.v2.program_pb2.Program] = ...,
        args : typing.Optional[typing.Mapping[typing.Text, cirq_google.api.v2.program_pb2.Arg]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"args",b"args",u"calibration_type",b"calibration_type",u"layer",b"layer"]) -> None: ...
global___CalibrationLayer = CalibrationLayer

class FocusedCalibrationResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULTS_FIELD_NUMBER: builtins.int

    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CalibrationLayerResult]: ...

    def __init__(self,
        *,
        results : typing.Optional[typing.Iterable[global___CalibrationLayerResult]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"results",b"results"]) -> None: ...
global___FocusedCalibrationResult = FocusedCalibrationResult

class CalibrationLayerResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    VALID_UNTIL_MS_FIELD_NUMBER: builtins.int
    code: global___CalibrationLayerCode.V = ...
    error_message: typing.Text = ...
    token: typing.Text = ...
    valid_until_ms: builtins.int = ...

    @property
    def metrics(self) -> cirq_google.api.v2.metrics_pb2.MetricsSnapshot: ...

    def __init__(self,
        *,
        code : global___CalibrationLayerCode.V = ...,
        error_message : typing.Text = ...,
        token : typing.Text = ...,
        metrics : typing.Optional[cirq_google.api.v2.metrics_pb2.MetricsSnapshot] = ...,
        valid_until_ms : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"metrics",b"metrics"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"code",b"code",u"error_message",b"error_message",u"metrics",b"metrics",u"token",b"token",u"valid_until_ms",b"valid_until_ms"]) -> None: ...
global___CalibrationLayerResult = CalibrationLayerResult
