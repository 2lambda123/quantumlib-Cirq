"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Qubit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROW_FIELD_NUMBER: builtins.int
    COL_FIELD_NUMBER: builtins.int
    row: builtins.int = ...
    col: builtins.int = ...

    def __init__(self,
        *,
        row : builtins.int = ...,
        col : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"col",b"col",u"row",b"row"]) -> None: ...
global___Qubit = Qubit

class ParameterizedFloat(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RAW_FIELD_NUMBER: builtins.int
    PARAMETER_KEY_FIELD_NUMBER: builtins.int
    raw: builtins.float = ...
    parameter_key: typing.Text = ...

    def __init__(self,
        *,
        raw : builtins.float = ...,
        parameter_key : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"parameter_key",b"parameter_key",u"raw",b"raw",u"value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"parameter_key",b"parameter_key",u"raw",b"raw",u"value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"value",b"value"]) -> typing_extensions.Literal["raw","parameter_key"]: ...
global___ParameterizedFloat = ParameterizedFloat

class ExpW(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    AXIS_HALF_TURNS_FIELD_NUMBER: builtins.int
    HALF_TURNS_FIELD_NUMBER: builtins.int

    @property
    def target(self) -> global___Qubit: ...

    @property
    def axis_half_turns(self) -> global___ParameterizedFloat: ...

    @property
    def half_turns(self) -> global___ParameterizedFloat: ...

    def __init__(self,
        *,
        target : typing.Optional[global___Qubit] = ...,
        axis_half_turns : typing.Optional[global___ParameterizedFloat] = ...,
        half_turns : typing.Optional[global___ParameterizedFloat] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"axis_half_turns",b"axis_half_turns",u"half_turns",b"half_turns",u"target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"axis_half_turns",b"axis_half_turns",u"half_turns",b"half_turns",u"target",b"target"]) -> None: ...
global___ExpW = ExpW

class ExpZ(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    HALF_TURNS_FIELD_NUMBER: builtins.int

    @property
    def target(self) -> global___Qubit: ...

    @property
    def half_turns(self) -> global___ParameterizedFloat: ...

    def __init__(self,
        *,
        target : typing.Optional[global___Qubit] = ...,
        half_turns : typing.Optional[global___ParameterizedFloat] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"half_turns",b"half_turns",u"target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"half_turns",b"half_turns",u"target",b"target"]) -> None: ...
global___ExpZ = ExpZ

class Exp11(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET1_FIELD_NUMBER: builtins.int
    TARGET2_FIELD_NUMBER: builtins.int
    HALF_TURNS_FIELD_NUMBER: builtins.int

    @property
    def target1(self) -> global___Qubit: ...

    @property
    def target2(self) -> global___Qubit: ...

    @property
    def half_turns(self) -> global___ParameterizedFloat: ...

    def __init__(self,
        *,
        target1 : typing.Optional[global___Qubit] = ...,
        target2 : typing.Optional[global___Qubit] = ...,
        half_turns : typing.Optional[global___ParameterizedFloat] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"half_turns",b"half_turns",u"target1",b"target1",u"target2",b"target2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"half_turns",b"half_turns",u"target1",b"target1",u"target2",b"target2"]) -> None: ...
global___Exp11 = Exp11

class Measurement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGETS_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    INVERT_MASK_FIELD_NUMBER: builtins.int
    key: typing.Text = ...

    @property
    def invert_mask(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...

    @property
    def targets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Qubit]: ...

    def __init__(self,
        *,
        targets : typing.Optional[typing.Iterable[global___Qubit]] = ...,
        key : typing.Text = ...,
        invert_mask : typing.Optional[typing.Iterable[builtins.bool]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"invert_mask",b"invert_mask",u"key",b"key",u"targets",b"targets"]) -> None: ...
global___Measurement = Measurement

class Operation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INCREMENTAL_DELAY_PICOSECONDS_FIELD_NUMBER: builtins.int
    EXP_W_FIELD_NUMBER: builtins.int
    EXP_Z_FIELD_NUMBER: builtins.int
    EXP_11_FIELD_NUMBER: builtins.int
    MEASUREMENT_FIELD_NUMBER: builtins.int
    incremental_delay_picoseconds: builtins.int = ...

    @property
    def exp_w(self) -> global___ExpW: ...

    @property
    def exp_z(self) -> global___ExpZ: ...

    @property
    def exp_11(self) -> global___Exp11: ...

    @property
    def measurement(self) -> global___Measurement: ...

    def __init__(self,
        *,
        incremental_delay_picoseconds : builtins.int = ...,
        exp_w : typing.Optional[global___ExpW] = ...,
        exp_z : typing.Optional[global___ExpZ] = ...,
        exp_11 : typing.Optional[global___Exp11] = ...,
        measurement : typing.Optional[global___Measurement] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"exp_11",b"exp_11",u"exp_w",b"exp_w",u"exp_z",b"exp_z",u"measurement",b"measurement",u"operation",b"operation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"exp_11",b"exp_11",u"exp_w",b"exp_w",u"exp_z",b"exp_z",u"incremental_delay_picoseconds",b"incremental_delay_picoseconds",u"measurement",b"measurement",u"operation",b"operation"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"operation",b"operation"]) -> typing_extensions.Literal["exp_w","exp_z","exp_11","measurement"]: ...
global___Operation = Operation
