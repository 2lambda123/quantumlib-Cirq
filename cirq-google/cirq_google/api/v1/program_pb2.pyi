"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import cirq_google.api.v1.operations_pb2
import cirq_google.api.v1.params_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

# A quantum program. This includes a quantum circuit and also a set of circuit
# parameters over which the circuit should be run.
class Program(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATIONS_FIELD_NUMBER: builtins.int
    PARAMETER_SWEEPS_FIELD_NUMBER: builtins.int
    # Gates and measurements that make up the circuit.
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cirq_google.api.v1.operations_pb2.Operation]: ...
    # The circuit parameters for the operations above will be evaluated for
    # each parameter in parameter sweeps.
    @property
    def parameter_sweeps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cirq_google.api.v1.params_pb2.ParameterSweep]: ...
    def __init__(self,
        *,
        operations : typing.Optional[typing.Iterable[cirq_google.api.v1.operations_pb2.Operation]] = ...,
        parameter_sweeps : typing.Optional[typing.Iterable[cirq_google.api.v1.params_pb2.ParameterSweep]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"operations",b"operations",u"parameter_sweeps",b"parameter_sweeps"]) -> None: ...
global___Program = Program

# The context for running a quantum program.
class RunContext(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARAMETER_SWEEPS_FIELD_NUMBER: builtins.int
    # The parameters for operations in a program.
    @property
    def parameter_sweeps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cirq_google.api.v1.params_pb2.ParameterSweep]: ...
    def __init__(self,
        *,
        parameter_sweeps : typing.Optional[typing.Iterable[cirq_google.api.v1.params_pb2.ParameterSweep]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"parameter_sweeps",b"parameter_sweeps"]) -> None: ...
global___RunContext = RunContext

# The parameters used to generate result along with the results for this
# set of parameters.
class ParameterizedResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARAMS_FIELD_NUMBER: builtins.int
    MEASUREMENT_RESULTS_FIELD_NUMBER: builtins.int
    # The parameter dict that was used when generating these results.
    @property
    def params(self) -> cirq_google.api.v1.params_pb2.ParameterDict: ...
    # The measurement results. This is a packed representation of all of the
    # measurements for fixed set of parameters (specified by params above)
    # across all of the repetitions for the set of parameters given the
    # params field.
    #
    # The result of a measurement gate is a list of bits, one for each qubit
    # that has been measured. Every Program has a fixed set of measurement gates.
    # These gates are labeled by a key (this key is unique across the Program).
    # The results of a single run of the program should consist of bits for
    # each of the measurement gates. To order these bits we use the
    # measurement_keys field of the SweepResult. This is an ordered list of
    # measurement keys, each of which includes a list of qubits that the
    # measurement acts on. We use the ordering of the measurement_keys and then
    # the ordering of the qubits to define the order of the bit string for a
    # single run of the measurement.
    #
    # If the keys are (k_i), for i \in {0, 1, ..., m-1}, and the measurement
    # acts on qubits q_{i,0}, q_{i,1}, ..., q_{i,n_i-1} (so that ith key
    # corresponds to n_i qubits), then the measurements bit results are
    # defined as
    #  r_0[0] r_0[1] ... r_0[n_i-1] r_1[0] r_1[1] ... r_1[n_1-1] ...
    #   ... r_{m-1}[0] r_{m-1}[1] ... r_{m-1}[n_{m-1}-1]
    # Here r_i are the measurement result for the ith key (order defined by
    # measurement keys).  Since the ith key has n_i qubits, r_i is a length
    # n_i bit string, and r_i[j] is the jth bit in this string (order
    # following the list order of the qubits).
    #
    # The above describes a bit string for a single run of a program with
    # fixed parameters. This program however may be repeated, the number
    # of times the program was run for these parameters is defined by the
    # num_repetitions field of the SweepResult. If R_l is the bit string
    # for the lth repetition of the program (defined by the r_0[0]... bit
    # string above), then the full results is the concatenation of these
    # bit strings
    #   R_0 R_1 ... R_{num_repetitions - 1}
    #
    # Finally this entire bit string is encoded into the bytes of this field
    # using little endian notation. That is, the least significant bit of the
    # bytes is the first bit of the bit string, the second-least significant
    # bit of the bytes is the second bit of the bit string, etc.
    measurement_results: builtins.bytes = ...
    def __init__(self,
        *,
        params : typing.Optional[cirq_google.api.v1.params_pb2.ParameterDict] = ...,
        measurement_results : builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"params",b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"measurement_results",b"measurement_results",u"params",b"params"]) -> None: ...
global___ParameterizedResult = ParameterizedResult

# A message which represents a measurement key, along with the qubits
# upon which the measurement acts. This measurement is in the computational
# basis.
class MeasurementKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    QUBITS_FIELD_NUMBER: builtins.int
    # The measurement key.
    key: typing.Text = ...
    # The qubits upon which this measurement is performed.
    @property
    def qubits(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cirq_google.api.v1.operations_pb2.Qubit]: ...
    def __init__(self,
        *,
        key : typing.Text = ...,
        qubits : typing.Optional[typing.Iterable[cirq_google.api.v1.operations_pb2.Qubit]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"qubits",b"qubits"]) -> None: ...
global___MeasurementKey = MeasurementKey

# The measurement results for a particular ParameterSweep.
class SweepResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REPETITIONS_FIELD_NUMBER: builtins.int
    MEASUREMENT_KEYS_FIELD_NUMBER: builtins.int
    PARAMETERIZED_RESULTS_FIELD_NUMBER: builtins.int
    # The total number of repetitions that were performed for this sweep.
    # This is reported in order to make it possible to decode the bytes
    # in the measurement results.
    repetitions: builtins.int = ...
    # A list of measurement keys (string) along with the qubits that have been
    # measured. The size of the measurement key is the total number of
    # measurements in the list of operations for the Program. The measurement
    # keys are all unique.
    @property
    def measurement_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MeasurementKey]: ...
    # The results along with the parameters that generated these results.
    # These represent the expanded parameters defined int he ParameterSweep
    # which this SweepResult corresponds to.
    @property
    def parameterized_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ParameterizedResult]: ...
    def __init__(self,
        *,
        repetitions : builtins.int = ...,
        measurement_keys : typing.Optional[typing.Iterable[global___MeasurementKey]] = ...,
        parameterized_results : typing.Optional[typing.Iterable[global___ParameterizedResult]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"measurement_keys",b"measurement_keys",u"parameterized_results",b"parameterized_results",u"repetitions",b"repetitions"]) -> None: ...
global___SweepResult = SweepResult

# The overall results of running a Program.
class Result(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SWEEP_RESULTS_FIELD_NUMBER: builtins.int
    # The results for each ParameterSweep. These will be in the same order
    # as the parameter_sweeps repeated field in the Program that generated
    # these results.
    @property
    def sweep_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SweepResult]: ...
    def __init__(self,
        *,
        sweep_results : typing.Optional[typing.Iterable[global___SweepResult]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"sweep_results",b"sweep_results"]) -> None: ...
global___Result = Result
